group 'media-server'
version '4.4.3'

apply plugin: 'java'

def javaVersion = JavaVersion.VERSION_1_7;
sourceCompatibility = javaVersion;
targetCompatibility = javaVersion;

configurations {
    forInstaller
    provided
    compile.extendsFrom provided
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked"
}


repositories {
    mavenCentral()
    maven {
        url "https://raw.github.com/kaltura/KalturaGeneratedAPIClientsJava/PLAT-2504/maven"
    }
}

dependencies {
    compile 'com.kaltura:KalturaClientLib:3.3.2'
    provided 'log4j:log4j:1.2.17'
    provided files(
            "$WMSINSTALL_HOME/lib/bcprov-jdk15on-154.jar",
            "$WMSINSTALL_HOME/lib/joda-time-2.3.jar",
            "$WMSINSTALL_HOME/lib/commons-lang-2.6.jar",
            "$WMSINSTALL_HOME/lib/jid3lib-0.5.4.jar",
    )
    provided fileTree(dir: "$WMSINSTALL_HOME/lib", includes: ['wms*.jar', 'jackson*.jar', 'slf4j*.jar'])
    forInstaller "mysql:mysql-connector-java:5.1.34"
}

/**
 * copy all the needed media-server jars to wowza lib dir
 */
task copyJarsToWowzaLibDir(type: Copy) {
    def dest1 = "$WMSINSTALL_HOME/lib"
    def dest2 = "$buildDir/tmp/artifacts"
    println "media-server artifacts will be copied to:"
    println dest1
    println dest2

    into dest1
    into dest2
    from configurations.runtime.allArtifacts.files
    from (configurations.runtime - configurations.provided)

    doFirst {
        println "copying media-server jars to:"
        println dest1
        println dest2
    }
}
build.dependsOn(copyJarsToWowzaLibDir)

task validateWowzaDirExists {
    def fileExists = true
    //search for wowza folder that is defined in gradle.properties
    def folder = new File("${WMSINSTALL_HOME}")
    if( !folder.exists() ) {
        //if not exists, search for wowza folder defined by env variable
        WMSINSTALL_HOME = System.env.WMSINSTALL_HOME
        folder = new File("${WMSINSTALL_HOME}")
        if( !folder.exists() ) {
            fileExists = false
        }
    }

    doFirst {
        if (!fileExists) {
            throw new InvalidUserDataException("Wowza dir: '${WMSINSTALL_HOME}' does not exist. Edit gradle.properties")
        }
        println "Build will be using wowza jars from: $WMSINSTALL_HOME"
    }
}
compileJava.dependsOn validateWowzaDirExists


task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
